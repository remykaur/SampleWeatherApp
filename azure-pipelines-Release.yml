trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  webAppName: 'WeatherForcastSample'

stages:
  - stage: build
    displayName: 'Build API'
    jobs:
      - job: build
        displayName: Build Artifact
        pool:
          vmImage: 'windows-latest'
        steps:
        - task: DotNetCoreCLI@2
          displayName: Restore packages
          inputs:
            command: 'restore'
            projects: '$(solution)'
            feedsToUse: 'select'
        - task: DotNetCoreCLI@2
          displayName: build binaries
          inputs:
            command: 'build'
            projects: '$(solution)'
            arguments: '-c $(buildConfiguration)'
        - task: DotNetCoreCLI@2
          displayName: Testing units
          inputs:
            command: 'test'
            projects: './src/SampleRestApi/SampleRestApi.UnitTests/SampleRestApi.UnitTests.csproj'
            arguments: '-c $(buildConfiguration)'
            publishTestResults: true
        - task: DotNetCoreCLI@2
          displayName: publish artefacts
          inputs:
            command: 'publish'
            arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            publishWebProjects: true
            workingDirectory: './src/SampleRestApi/SampleRestApi/'
            zipAfterPublish: true

        - publish: '$(Build.ArtifactStagingDirectory)'
          artifact: WebApp

  - stage: Release
    displayName: 'Release API'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    # condition: succeeded('build')
    jobs:
      - job: dev
        displayName: deploy Artifact
        pool:
          vmImage: 'ubuntu-latest'
        steps:
        - download: current
          artifact: WebApp
        - task: AzureCLI@2
          displayName: Create infrastructure
          inputs:
            azureSubscription: 'Xpirit MPN sponsored Azure(f317d45c-55f5-4341-8d49-990b06d1c9a5)'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az group create --name rg-$(webAppName) --location westeurope;
              az appservice plan create --name $(webAppName)-plan --resource-group rg-$(webAppName) --sku F1 ;
              az webapp create --name $(webAppName) --resource-group rg-$(webAppName) --plan $(webAppName)-plan --runtime "dotnet:7";
        - task: AzureRmWebAppDeployment@4
          displayName: deploy webapp
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'Xpirit MPN sponsored Azure(f317d45c-55f5-4341-8d49-990b06d1c9a5)'
            appType: 'webApp'
            WebAppName: '$(webAppName)'
            packageForLinux: '$(Pipeline.Workspace)/WebApp/**/*.zip'
